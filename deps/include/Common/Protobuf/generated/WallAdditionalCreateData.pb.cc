// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: WallAdditionalCreateData.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "WallAdditionalCreateData.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Data {
class WallAdditionalCreateDataDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<WallAdditionalCreateData> {
} _WallAdditionalCreateData_default_instance_;

namespace protobuf_WallAdditionalCreateData_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[1];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WallAdditionalCreateData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WallAdditionalCreateData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WallAdditionalCreateData, begin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WallAdditionalCreateData, end_),
  0,
  1,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 6, sizeof(WallAdditionalCreateData)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_WallAdditionalCreateData_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "WallAdditionalCreateData.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

}  // namespace

void TableStruct::Shutdown() {
  _WallAdditionalCreateData_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::Data::protobuf_Base_2eproto::InitDefaults();
  _WallAdditionalCreateData_default_instance_.DefaultConstruct();
  _WallAdditionalCreateData_default_instance_.get_mutable()->begin_ = const_cast< ::Data::Vec2*>(
      ::Data::Vec2::internal_default_instance());
  _WallAdditionalCreateData_default_instance_.get_mutable()->end_ = const_cast< ::Data::Vec2*>(
      ::Data::Vec2::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\036WallAdditionalCreateData.proto\022\004Data\032\n"
      "Base.proto\"N\n\030WallAdditionalCreateData\022\031"
      "\n\005begin\030\001 \002(\0132\n.Data.Vec2\022\027\n\003end\030\002 \002(\0132\n"
      ".Data.Vec2"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 130);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "WallAdditionalCreateData.proto", &protobuf_RegisterTypes);
  ::Data::protobuf_Base_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_WallAdditionalCreateData_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WallAdditionalCreateData::kBeginFieldNumber;
const int WallAdditionalCreateData::kEndFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WallAdditionalCreateData::WallAdditionalCreateData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_WallAdditionalCreateData_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Data.WallAdditionalCreateData)
}
WallAdditionalCreateData::WallAdditionalCreateData(const WallAdditionalCreateData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_begin()) {
    begin_ = new ::Data::Vec2(*from.begin_);
  } else {
    begin_ = NULL;
  }
  if (from.has_end()) {
    end_ = new ::Data::Vec2(*from.end_);
  } else {
    end_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Data.WallAdditionalCreateData)
}

void WallAdditionalCreateData::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&begin_, 0, reinterpret_cast<char*>(&end_) -
    reinterpret_cast<char*>(&begin_) + sizeof(end_));
}

WallAdditionalCreateData::~WallAdditionalCreateData() {
  // @@protoc_insertion_point(destructor:Data.WallAdditionalCreateData)
  SharedDtor();
}

void WallAdditionalCreateData::SharedDtor() {
  if (this != internal_default_instance()) {
    delete begin_;
  }
  if (this != internal_default_instance()) {
    delete end_;
  }
}

void WallAdditionalCreateData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WallAdditionalCreateData::descriptor() {
  protobuf_WallAdditionalCreateData_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_WallAdditionalCreateData_2eproto::file_level_metadata[0].descriptor;
}

const WallAdditionalCreateData& WallAdditionalCreateData::default_instance() {
  protobuf_WallAdditionalCreateData_2eproto::InitDefaults();
  return *internal_default_instance();
}

WallAdditionalCreateData* WallAdditionalCreateData::New(::google::protobuf::Arena* arena) const {
  WallAdditionalCreateData* n = new WallAdditionalCreateData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WallAdditionalCreateData::Clear() {
// @@protoc_insertion_point(message_clear_start:Data.WallAdditionalCreateData)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_begin()) {
      GOOGLE_DCHECK(begin_ != NULL);
      begin_->::Data::Vec2::Clear();
    }
    if (has_end()) {
      GOOGLE_DCHECK(end_ != NULL);
      end_->::Data::Vec2::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool WallAdditionalCreateData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Data.WallAdditionalCreateData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Data.Vec2 begin = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_begin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .Data.Vec2 end = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_end()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Data.WallAdditionalCreateData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Data.WallAdditionalCreateData)
  return false;
#undef DO_
}

void WallAdditionalCreateData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Data.WallAdditionalCreateData)
  // required .Data.Vec2 begin = 1;
  if (has_begin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->begin_, output);
  }

  // required .Data.Vec2 end = 2;
  if (has_end()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->end_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Data.WallAdditionalCreateData)
}

::google::protobuf::uint8* WallAdditionalCreateData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Data.WallAdditionalCreateData)
  // required .Data.Vec2 begin = 1;
  if (has_begin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->begin_, false, target);
  }

  // required .Data.Vec2 end = 2;
  if (has_end()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->end_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Data.WallAdditionalCreateData)
  return target;
}

size_t WallAdditionalCreateData::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Data.WallAdditionalCreateData)
  size_t total_size = 0;

  if (has_begin()) {
    // required .Data.Vec2 begin = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->begin_);
  }

  if (has_end()) {
    // required .Data.Vec2 end = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->end_);
  }

  return total_size;
}
size_t WallAdditionalCreateData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Data.WallAdditionalCreateData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .Data.Vec2 begin = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->begin_);

    // required .Data.Vec2 end = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->end_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WallAdditionalCreateData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Data.WallAdditionalCreateData)
  GOOGLE_DCHECK_NE(&from, this);
  const WallAdditionalCreateData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WallAdditionalCreateData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Data.WallAdditionalCreateData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Data.WallAdditionalCreateData)
    MergeFrom(*source);
  }
}

void WallAdditionalCreateData::MergeFrom(const WallAdditionalCreateData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Data.WallAdditionalCreateData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_begin()) {
      mutable_begin()->::Data::Vec2::MergeFrom(from.begin());
    }
    if (from.has_end()) {
      mutable_end()->::Data::Vec2::MergeFrom(from.end());
    }
  }
}

void WallAdditionalCreateData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Data.WallAdditionalCreateData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WallAdditionalCreateData::CopyFrom(const WallAdditionalCreateData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Data.WallAdditionalCreateData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WallAdditionalCreateData::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_begin()) {
    if (!this->begin_->IsInitialized()) return false;
  }
  if (has_end()) {
    if (!this->end_->IsInitialized()) return false;
  }
  return true;
}

void WallAdditionalCreateData::Swap(WallAdditionalCreateData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WallAdditionalCreateData::InternalSwap(WallAdditionalCreateData* other) {
  std::swap(begin_, other->begin_);
  std::swap(end_, other->end_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WallAdditionalCreateData::GetMetadata() const {
  protobuf_WallAdditionalCreateData_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_WallAdditionalCreateData_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WallAdditionalCreateData

// required .Data.Vec2 begin = 1;
bool WallAdditionalCreateData::has_begin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void WallAdditionalCreateData::set_has_begin() {
  _has_bits_[0] |= 0x00000001u;
}
void WallAdditionalCreateData::clear_has_begin() {
  _has_bits_[0] &= ~0x00000001u;
}
void WallAdditionalCreateData::clear_begin() {
  if (begin_ != NULL) begin_->::Data::Vec2::Clear();
  clear_has_begin();
}
const ::Data::Vec2& WallAdditionalCreateData::begin() const {
  // @@protoc_insertion_point(field_get:Data.WallAdditionalCreateData.begin)
  return begin_ != NULL ? *begin_
                         : *::Data::Vec2::internal_default_instance();
}
::Data::Vec2* WallAdditionalCreateData::mutable_begin() {
  set_has_begin();
  if (begin_ == NULL) {
    begin_ = new ::Data::Vec2;
  }
  // @@protoc_insertion_point(field_mutable:Data.WallAdditionalCreateData.begin)
  return begin_;
}
::Data::Vec2* WallAdditionalCreateData::release_begin() {
  // @@protoc_insertion_point(field_release:Data.WallAdditionalCreateData.begin)
  clear_has_begin();
  ::Data::Vec2* temp = begin_;
  begin_ = NULL;
  return temp;
}
void WallAdditionalCreateData::set_allocated_begin(::Data::Vec2* begin) {
  delete begin_;
  begin_ = begin;
  if (begin) {
    set_has_begin();
  } else {
    clear_has_begin();
  }
  // @@protoc_insertion_point(field_set_allocated:Data.WallAdditionalCreateData.begin)
}

// required .Data.Vec2 end = 2;
bool WallAdditionalCreateData::has_end() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void WallAdditionalCreateData::set_has_end() {
  _has_bits_[0] |= 0x00000002u;
}
void WallAdditionalCreateData::clear_has_end() {
  _has_bits_[0] &= ~0x00000002u;
}
void WallAdditionalCreateData::clear_end() {
  if (end_ != NULL) end_->::Data::Vec2::Clear();
  clear_has_end();
}
const ::Data::Vec2& WallAdditionalCreateData::end() const {
  // @@protoc_insertion_point(field_get:Data.WallAdditionalCreateData.end)
  return end_ != NULL ? *end_
                         : *::Data::Vec2::internal_default_instance();
}
::Data::Vec2* WallAdditionalCreateData::mutable_end() {
  set_has_end();
  if (end_ == NULL) {
    end_ = new ::Data::Vec2;
  }
  // @@protoc_insertion_point(field_mutable:Data.WallAdditionalCreateData.end)
  return end_;
}
::Data::Vec2* WallAdditionalCreateData::release_end() {
  // @@protoc_insertion_point(field_release:Data.WallAdditionalCreateData.end)
  clear_has_end();
  ::Data::Vec2* temp = end_;
  end_ = NULL;
  return temp;
}
void WallAdditionalCreateData::set_allocated_end(::Data::Vec2* end) {
  delete end_;
  end_ = end;
  if (end) {
    set_has_end();
  } else {
    clear_has_end();
  }
  // @@protoc_insertion_point(field_set_allocated:Data.WallAdditionalCreateData.end)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Data

// @@protoc_insertion_point(global_scope)
