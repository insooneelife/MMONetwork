// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ReplicateData.proto

#ifndef PROTOBUF_ReplicateData_2eproto__INCLUDED
#define PROTOBUF_ReplicateData_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "ModifyData.pb.h"
#include "UpdateData.pb.h"
// @@protoc_insertion_point(includes)
namespace Data {
class ModifyData;
class ModifyDataDefaultTypeInternal;
extern ModifyDataDefaultTypeInternal _ModifyData_default_instance_;
class ReplicateData;
class ReplicateDataDefaultTypeInternal;
extern ReplicateDataDefaultTypeInternal _ReplicateData_default_instance_;
class UpdateData;
class UpdateDataDefaultTypeInternal;
extern UpdateDataDefaultTypeInternal _UpdateData_default_instance_;
}  // namespace Data

namespace Data {

namespace protobuf_ReplicateData_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_ReplicateData_2eproto

// ===================================================================

class ReplicateData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Data.ReplicateData) */ {
 public:
  ReplicateData();
  virtual ~ReplicateData();

  ReplicateData(const ReplicateData& from);

  inline ReplicateData& operator=(const ReplicateData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReplicateData& default_instance();

  static inline const ReplicateData* internal_default_instance() {
    return reinterpret_cast<const ReplicateData*>(
               &_ReplicateData_default_instance_);
  }

  void Swap(ReplicateData* other);

  // implements Message ----------------------------------------------

  inline ReplicateData* New() const PROTOBUF_FINAL { return New(NULL); }

  ReplicateData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ReplicateData& from);
  void MergeFrom(const ReplicateData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ReplicateData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Data.ModifyData modified = 1;
  bool has_modified() const;
  void clear_modified();
  static const int kModifiedFieldNumber = 1;
  const ::Data::ModifyData& modified() const;
  ::Data::ModifyData* mutable_modified();
  ::Data::ModifyData* release_modified();
  void set_allocated_modified(::Data::ModifyData* modified);

  // optional .Data.UpdateData updated = 2;
  bool has_updated() const;
  void clear_updated();
  static const int kUpdatedFieldNumber = 2;
  const ::Data::UpdateData& updated() const;
  ::Data::UpdateData* mutable_updated();
  ::Data::UpdateData* release_updated();
  void set_allocated_updated(::Data::UpdateData* updated);

  // @@protoc_insertion_point(class_scope:Data.ReplicateData)
 private:
  void set_has_modified();
  void clear_has_modified();
  void set_has_updated();
  void clear_has_updated();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::Data::ModifyData* modified_;
  ::Data::UpdateData* updated_;
  friend struct  protobuf_ReplicateData_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ReplicateData

// optional .Data.ModifyData modified = 1;
inline bool ReplicateData::has_modified() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReplicateData::set_has_modified() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReplicateData::clear_has_modified() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReplicateData::clear_modified() {
  if (modified_ != NULL) modified_->::Data::ModifyData::Clear();
  clear_has_modified();
}
inline const ::Data::ModifyData& ReplicateData::modified() const {
  // @@protoc_insertion_point(field_get:Data.ReplicateData.modified)
  return modified_ != NULL ? *modified_
                         : *::Data::ModifyData::internal_default_instance();
}
inline ::Data::ModifyData* ReplicateData::mutable_modified() {
  set_has_modified();
  if (modified_ == NULL) {
    modified_ = new ::Data::ModifyData;
  }
  // @@protoc_insertion_point(field_mutable:Data.ReplicateData.modified)
  return modified_;
}
inline ::Data::ModifyData* ReplicateData::release_modified() {
  // @@protoc_insertion_point(field_release:Data.ReplicateData.modified)
  clear_has_modified();
  ::Data::ModifyData* temp = modified_;
  modified_ = NULL;
  return temp;
}
inline void ReplicateData::set_allocated_modified(::Data::ModifyData* modified) {
  delete modified_;
  modified_ = modified;
  if (modified) {
    set_has_modified();
  } else {
    clear_has_modified();
  }
  // @@protoc_insertion_point(field_set_allocated:Data.ReplicateData.modified)
}

// optional .Data.UpdateData updated = 2;
inline bool ReplicateData::has_updated() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReplicateData::set_has_updated() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReplicateData::clear_has_updated() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReplicateData::clear_updated() {
  if (updated_ != NULL) updated_->::Data::UpdateData::Clear();
  clear_has_updated();
}
inline const ::Data::UpdateData& ReplicateData::updated() const {
  // @@protoc_insertion_point(field_get:Data.ReplicateData.updated)
  return updated_ != NULL ? *updated_
                         : *::Data::UpdateData::internal_default_instance();
}
inline ::Data::UpdateData* ReplicateData::mutable_updated() {
  set_has_updated();
  if (updated_ == NULL) {
    updated_ = new ::Data::UpdateData;
  }
  // @@protoc_insertion_point(field_mutable:Data.ReplicateData.updated)
  return updated_;
}
inline ::Data::UpdateData* ReplicateData::release_updated() {
  // @@protoc_insertion_point(field_release:Data.ReplicateData.updated)
  clear_has_updated();
  ::Data::UpdateData* temp = updated_;
  updated_ = NULL;
  return temp;
}
inline void ReplicateData::set_allocated_updated(::Data::UpdateData* updated) {
  delete updated_;
  updated_ = updated;
  if (updated) {
    set_has_updated();
  } else {
    clear_has_updated();
  }
  // @@protoc_insertion_point(field_set_allocated:Data.ReplicateData.updated)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace Data

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ReplicateData_2eproto__INCLUDED
