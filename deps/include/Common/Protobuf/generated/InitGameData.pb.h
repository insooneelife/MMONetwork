// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: InitGameData.proto

#ifndef PROTOBUF_InitGameData_2eproto__INCLUDED
#define PROTOBUF_InitGameData_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "CreateData.pb.h"
#include "UserData.pb.h"
#include "JoinedData.pb.h"
// @@protoc_insertion_point(includes)
namespace Data {
class CreateData;
class CreateDataDefaultTypeInternal;
extern CreateDataDefaultTypeInternal _CreateData_default_instance_;
class InitGameData;
class InitGameDataDefaultTypeInternal;
extern InitGameDataDefaultTypeInternal _InitGameData_default_instance_;
class JoinedData;
class JoinedDataDefaultTypeInternal;
extern JoinedDataDefaultTypeInternal _JoinedData_default_instance_;
class UserData;
class UserDataDefaultTypeInternal;
extern UserDataDefaultTypeInternal _UserData_default_instance_;
}  // namespace Data

namespace Data {

namespace protobuf_InitGameData_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_InitGameData_2eproto

// ===================================================================

class InitGameData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Data.InitGameData) */ {
 public:
  InitGameData();
  virtual ~InitGameData();

  InitGameData(const InitGameData& from);

  inline InitGameData& operator=(const InitGameData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InitGameData& default_instance();

  static inline const InitGameData* internal_default_instance() {
    return reinterpret_cast<const InitGameData*>(
               &_InitGameData_default_instance_);
  }

  void Swap(InitGameData* other);

  // implements Message ----------------------------------------------

  inline InitGameData* New() const PROTOBUF_FINAL { return New(NULL); }

  InitGameData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InitGameData& from);
  void MergeFrom(const InitGameData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InitGameData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Data.CreateData creates = 1;
  bool has_creates() const;
  void clear_creates();
  static const int kCreatesFieldNumber = 1;
  const ::Data::CreateData& creates() const;
  ::Data::CreateData* mutable_creates();
  ::Data::CreateData* release_creates();
  void set_allocated_creates(::Data::CreateData* creates);

  // required .Data.UserData joined = 3;
  bool has_joined() const;
  void clear_joined();
  static const int kJoinedFieldNumber = 3;
  const ::Data::UserData& joined() const;
  ::Data::UserData* mutable_joined();
  ::Data::UserData* release_joined();
  void set_allocated_joined(::Data::UserData* joined);

  // required .Data.JoinedData others = 4;
  bool has_others() const;
  void clear_others();
  static const int kOthersFieldNumber = 4;
  const ::Data::JoinedData& others() const;
  ::Data::JoinedData* mutable_others();
  ::Data::JoinedData* release_others();
  void set_allocated_others(::Data::JoinedData* others);

  // required uint32 level = 2;
  bool has_level() const;
  void clear_level();
  static const int kLevelFieldNumber = 2;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Data.InitGameData)
 private:
  void set_has_creates();
  void clear_has_creates();
  void set_has_level();
  void clear_has_level();
  void set_has_joined();
  void clear_has_joined();
  void set_has_others();
  void clear_has_others();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::Data::CreateData* creates_;
  ::Data::UserData* joined_;
  ::Data::JoinedData* others_;
  ::google::protobuf::uint32 level_;
  friend struct  protobuf_InitGameData_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// InitGameData

// required .Data.CreateData creates = 1;
inline bool InitGameData::has_creates() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InitGameData::set_has_creates() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InitGameData::clear_has_creates() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InitGameData::clear_creates() {
  if (creates_ != NULL) creates_->::Data::CreateData::Clear();
  clear_has_creates();
}
inline const ::Data::CreateData& InitGameData::creates() const {
  // @@protoc_insertion_point(field_get:Data.InitGameData.creates)
  return creates_ != NULL ? *creates_
                         : *::Data::CreateData::internal_default_instance();
}
inline ::Data::CreateData* InitGameData::mutable_creates() {
  set_has_creates();
  if (creates_ == NULL) {
    creates_ = new ::Data::CreateData;
  }
  // @@protoc_insertion_point(field_mutable:Data.InitGameData.creates)
  return creates_;
}
inline ::Data::CreateData* InitGameData::release_creates() {
  // @@protoc_insertion_point(field_release:Data.InitGameData.creates)
  clear_has_creates();
  ::Data::CreateData* temp = creates_;
  creates_ = NULL;
  return temp;
}
inline void InitGameData::set_allocated_creates(::Data::CreateData* creates) {
  delete creates_;
  creates_ = creates;
  if (creates) {
    set_has_creates();
  } else {
    clear_has_creates();
  }
  // @@protoc_insertion_point(field_set_allocated:Data.InitGameData.creates)
}

// required uint32 level = 2;
inline bool InitGameData::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void InitGameData::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void InitGameData::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void InitGameData::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 InitGameData::level() const {
  // @@protoc_insertion_point(field_get:Data.InitGameData.level)
  return level_;
}
inline void InitGameData::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:Data.InitGameData.level)
}

// required .Data.UserData joined = 3;
inline bool InitGameData::has_joined() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InitGameData::set_has_joined() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InitGameData::clear_has_joined() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InitGameData::clear_joined() {
  if (joined_ != NULL) joined_->::Data::UserData::Clear();
  clear_has_joined();
}
inline const ::Data::UserData& InitGameData::joined() const {
  // @@protoc_insertion_point(field_get:Data.InitGameData.joined)
  return joined_ != NULL ? *joined_
                         : *::Data::UserData::internal_default_instance();
}
inline ::Data::UserData* InitGameData::mutable_joined() {
  set_has_joined();
  if (joined_ == NULL) {
    joined_ = new ::Data::UserData;
  }
  // @@protoc_insertion_point(field_mutable:Data.InitGameData.joined)
  return joined_;
}
inline ::Data::UserData* InitGameData::release_joined() {
  // @@protoc_insertion_point(field_release:Data.InitGameData.joined)
  clear_has_joined();
  ::Data::UserData* temp = joined_;
  joined_ = NULL;
  return temp;
}
inline void InitGameData::set_allocated_joined(::Data::UserData* joined) {
  delete joined_;
  joined_ = joined;
  if (joined) {
    set_has_joined();
  } else {
    clear_has_joined();
  }
  // @@protoc_insertion_point(field_set_allocated:Data.InitGameData.joined)
}

// required .Data.JoinedData others = 4;
inline bool InitGameData::has_others() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void InitGameData::set_has_others() {
  _has_bits_[0] |= 0x00000004u;
}
inline void InitGameData::clear_has_others() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void InitGameData::clear_others() {
  if (others_ != NULL) others_->::Data::JoinedData::Clear();
  clear_has_others();
}
inline const ::Data::JoinedData& InitGameData::others() const {
  // @@protoc_insertion_point(field_get:Data.InitGameData.others)
  return others_ != NULL ? *others_
                         : *::Data::JoinedData::internal_default_instance();
}
inline ::Data::JoinedData* InitGameData::mutable_others() {
  set_has_others();
  if (others_ == NULL) {
    others_ = new ::Data::JoinedData;
  }
  // @@protoc_insertion_point(field_mutable:Data.InitGameData.others)
  return others_;
}
inline ::Data::JoinedData* InitGameData::release_others() {
  // @@protoc_insertion_point(field_release:Data.InitGameData.others)
  clear_has_others();
  ::Data::JoinedData* temp = others_;
  others_ = NULL;
  return temp;
}
inline void InitGameData::set_allocated_others(::Data::JoinedData* others) {
  delete others_;
  others_ = others;
  if (others) {
    set_has_others();
  } else {
    clear_has_others();
  }
  // @@protoc_insertion_point(field_set_allocated:Data.InitGameData.others)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace Data

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_InitGameData_2eproto__INCLUDED
